{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Polys.svelte",
    "../src/Polys2.svelte"
  ],
  "sourcesContent": [
    "<script>\n  \n  import { scaleLinear } from \"d3-scale\";\n  // import { Date } from \"d3-time\"\n  import Polys from './Polys.svelte';\n  import Polys2 from './Polys2.svelte';\n  import { onMount } from 'svelte';\n  import { selectAll } from 'd3-selection'\n  import { drag } from 'd3-drag';\n  import queryString from \"query-string\";\n  import Checkbox from './Checkbox.svelte';\n  import Arrow from './Arrow.svelte';\n  import { format } from 'd3-format'\n  import { event } from 'd3-selection'\n\n  import katex from 'katex';\n\n  const legendheight = 67 \n\n  function range(n){\n    return Array(n).fill().map((_, i) => i);\n  }\n\n  function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n\n  var sum = function(arr, bools){\n    var x = 0\n    for (var i = 0; i < arr.length; i++) {\n      x = x + arr[i]*(bools[i] ? 1 : 0)\n    }\n    return x\n  }\n\n  var Integrators = {\n    Euler    : [[1]],\n    Midpoint : [[.5,.5],[0, 1]],\n    Heun     : [[1, 1],[.5,.5]],\n    Ralston  : [[2/3,2/3],[.25,.75]],\n    K3       : [[.5,.5],[1,-1,2],[1/6,2/3,1/6]],\n    SSP33    : [[1,1],[.5,.25,.25],[1/6,1/6,2/3]],\n    SSP43    : [[.5,.5],[1,.5,.5],[.5,1/6,1/6,1/6],[1/6,1/6,1/6,1/2]],\n    RK4      : [[.5,.5],[.5,0,.5],[1,0,0,1],[1/6,1/3,1/3,1/6]],\n    RK38     : [[1/3,1/3],[2/3,-1/3,1],[1,1,-1,1],[1/8,3/8,3/8,1/8]]\n  };\n\n  // f is a func of time t and state y\n  // y is the initial state, t is the time, h is the timestep\n  // updated y is returned.\n  var integrate=(m,f,y,t,h)=>{\n    for (var k=[],ki=0; ki<m.length; ki++) {\n      var _y=y.slice(), dt=ki?((m[ki-1][0])*h):0;\n      for (var l=0; l<_y.length; l++) for (var j=1; j<=ki; j++) _y[l]=_y[l]+h*(m[ki-1][j])*(k[ki-1][l]);\n      k[ki]=f(t+dt,_y,dt); \n    }\n    for (var r=y.slice(),l=0; l<_y.length; l++) for (var j=0; j<k.length; j++) r[l]=r[l]+h*(k[j][l])*(m[ki-1][j]);\n    return r;\n  }\n\n\n  $: Time_to_death     = 17\n  $: logN              = Math.log(44e6)\n  $: N                 = Math.exp(logN)\n  $: I0                = 1\n  $: E0                = 15 \n  $: R0                = 3.2\n  $: R0i               = 2.5\n  $: R0t               = 1.12\n  $: R0p               = 3.2\n  $: D_incbation       = 5.2\n  $: D_infectious      = 2.9\n  $: D_recovery_mild   = (8 - 2.9)\n  $: D_recovery_severe = (13 - 2.9)\n  $: D_hospital_lag    = 5\n  $: D_death           = Time_to_death - D_infectious\n  $: CFR               = 0.021\n  $: InterventionTime  = 18\n  $: IntervPrevia      = 10\n  $: retardo           = 8\n  $: Time              = 220\n  $: Xmax              = 110000\n  $: dt                = 2\n  $: P_SEVERE          = 0.2\n  $: duration          = 38\n  $: interpolation_steps  = 40\n  $: R0s = {\n    values: [R0,R0i,R0t,R0p],           //R0s antes de intervenir, medidas intermedias, cuarentena, postcuarentena\n    dias:   [0,IntervPrevia,InterventionTime,InterventionTime+duration,1500]  // intervalos de tiempo: 0 , 12/3, 20/3 , 20/3+duracion, infinito\n  }\n\n\n  $: state = location.protocol + '//' + location.host + location.pathname + \"?\" + queryString.stringify({\"Time_to_death\":Time_to_death,\n               \"logN\":logN,\n               \"I0\":I0,\n               \"E0\":E0,\n               \"R0\":R0,\n               \"R0p\":R0p,\n               \"D_incbation\":D_incbation,\n               \"D_infectious\":D_infectious,\n               \"D_recovery_mild\":D_recovery_mild,\n               \"D_recovery_severe\":D_recovery_severe,\n               \"CFR\":CFR,\n               \"InterventionTime\":InterventionTime,\n               \"retardo\":retardo,\n               \"R0t\":R0t,\n               \"duration\":duration,\n               \"interpolation_steps\":interpolation_steps,\n               \"D_hospital_lag\":D_hospital_lag,\n               \"P_SEVERE\": P_SEVERE})\n\n  function get_solution(dt, N, I0,E0, R0s, D_incbation,\n  D_infectious,D_recovery_mild,D_hospital_lag, D_recovery_severe, D_death, P_SEVERE, CFR,\n  InterventionTime,  retardo, duration, interpolation_steps,rango) {\n\n    // var interpolation_steps = 40\n    var steps = rango*interpolation_steps\n    var dt = dt/interpolation_steps\n    var sample_step = interpolation_steps\n\n    var method = Integrators[\"RK4\"]\n\n    function bata(t){\n      var beta = R0s.values[0]/(D_infectious);\n      for(var ii = 0; ii < R0s.values.length; ii++){\n         if (t >= R0s.dias[ii]+retardo && t < R0s.dias[ii+1]+retardo + duration){\n           beta = R0s.values[ii]/(D_infectious)\n         }\n      }\n      return beta\n    }\n \n    function f(t, x){\n\n      var beta = bata(t);\n      var a     = 1/D_incbation\n      var gamma = 1/D_infectious\n      \n      var S        = x[0] // Susectable\n      var E        = x[1] // Exposed\n      var I        = x[2] // Infectious \n      var Mild     = x[3] // Recovering (Mild)     \n      var Severe   = x[4] // Recovering (Severe at home)\n      var Severe_H = x[5] // Recovering (Severe in hospital)\n      var Fatal    = x[6] // Recovering (Fatal)\n      var R_Mild   = x[7] // Recovered\n      var R_Severe = x[8] // Recovered\n      var R_Fatal  = x[9] // Dead\n\n      var p_severe = P_SEVERE\n      var p_fatal  = CFR\n      var p_mild   = 1 - P_SEVERE - CFR\n\n      var dS        = -beta*I*S\n      var dE        =  beta*I*S - a*E\n      var dI        =  a*E - gamma*I\n      var dMild     =  p_mild*gamma*I   - (1/D_recovery_mild)*Mild\n      var dSevere   =  p_severe*gamma*I - (1/D_hospital_lag)*Severe\n      var dSevere_H =  (1/D_hospital_lag)*Severe - (1/D_recovery_severe)*Severe_H\n      var dFatal    =  p_fatal*gamma*I  - (1/D_death)*Fatal\n      var dR_Mild   =  (1/D_recovery_mild)*Mild\n      var dR_Severe =  (1/D_recovery_severe)*Severe_H\n      var dR_Fatal  =  (1/D_death)*Fatal\n\n      //      0   1   2   3      4        5          6       7        8          9\n      return [dS, dE, dI, dMild, dSevere, dSevere_H, dFatal, dR_Mild, dR_Severe, dR_Fatal]\n    }\n\n    var v = [1, E0/(N-E0-I0), I0/(N-E0-I0), 0, 0, 0, 0, 0, 0, 0]\n    var t = 0\n\n    var P  = []\n    var TI = []\n    var Iters = []\n    var tata = []\n    var roro = []\n    while (steps--) { \n      if ((steps+1) % (sample_step) == 0) {\n            //    Dead   Hospital          Recovered        Infected   Exposed\n        P.push([ N*v[9], N*(v[5]+v[6]),  N*(v[7] + v[8]), N*v[2],    N*v[1] ])\n        Iters.push(v)\n        TI.push(N*(1-v[0]))\n        tata.push(t)\n        roro.push(bata(t))\n        // console.log((v[0] + v[1] + v[2] + v[3] + v[4] + v[5] + v[6] + v[7] + v[8] + v[9]))\n        // console.log(v[0] , v[1] , v[2] , v[3] , v[4] , v[5] , v[6] , v[7] , v[8] , v[9])\n      }\n      v =integrate(method,f,v,t,dt); \n      t+=dt\n    }\n    return {\"P\": P, \n            \"deaths\": N*v[6], \n            \"total\": 1-v[0],\n            \"total_infected\": TI,\n            \"Iters\":Iters,\n            \"dIters\": f,\n            \"dias\": tata,\n            \"R0func\": roro\n\t    }\n  }\n\n  function max(P, rm,checked) {\n    var maxi=-1.0\n    for(var i = 0; i < P.length; i++){\n      for(var j=0;j< P[i].length;j++){\n        if(P[i][j]*checked[j]>maxi)\n        {\n          maxi=P[i][j];\n        }\n      }\n      if(rm[i]*checked[7]>maxi)\n      {\n          maxi=rm[i];\n      }\n\n    }\n    return maxi;\n  }\n\n  function sumactivos(P) {\n     var rmt=[]\n     for (var i = 0; i < P.length; i++) {\n        rmt.push(P[i][0]+P[i][2]+P[i][3]);\n     }\n    return(rmt);\n  }\n\n\n  $: Sol            = get_solution(dt, N, I0,E0, R0s, D_incbation, D_infectious,\n  D_recovery_mild,D_hospital_lag, D_recovery_severe, D_death, P_SEVERE, CFR, InterventionTime,\n  retardo,duration,interpolation_steps,110)\n  $: P              = Sol[\"P\"].slice(0,100)\n  $: R0func        = Sol[\"R0func\"].slice(0,100)\n  $: rm = sumactivos(P);\n  $: timestep       = dt\n  $: tmax           = dt*100\n  $: deaths         = Sol[\"deaths\"]\n  $: total          = Sol[\"total\"]\n  $: total_infected = Sol[\"total_infected\"].slice(0,100)\n  $: Iters          = Sol[\"Iters\"]\n  $: dIters         = Sol[\"dIters\"]\n  $: Pmax           = max(P, rm, checked)\n  $: lock           = false\n\n\n  // var colors = [ \"#386cb0\", \"#8da0cb\", \"#4daf4a\", \"#f0027f\", \"#fdc086\"]\n  //var colors = [ \"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n  var colors = [ \"#8dd3c7\",\"#d1d128\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"]\n\n  var Plock = 1\n\n  var drag_y = function (){\n    var dragstarty = 0\n    var Pmaxstart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.y  \n      Pmaxstart  = Pmax\n    }\n\n    var dragged = function (d) {\n      Pmax = Math.max( (Pmaxstart*(1 + (event.y - dragstarty)/500)), 10)\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted)\n  }\n\n  var drag_x = function (){\n    var dragstartx = 0\n    var dtstart = 0\n    var Pmaxstart = 0\n    var dragstarted = function (d) {\n      dragstartx = event.x\n      dtstart  = dt\n      Plock = Pmax\n      lock = true\n    }\n    var dragged = function (d) {\n      dt = dtstart - 0.0015*(event.x - dragstartx)\n    }\n    var dragend = function (d) {\n      lock = false\n    }\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n  var drag_intervention = function (){\n    var dragstarty = 0\n    var InterventionTimeStart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.x  \n      InterventionTimeStart = InterventionTime\n      Plock = Pmax\n      lock = true\n    }\n\n    var dragged = function (d) {\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\n      // console.log(event.x)\n      InterventionTime = Math.min(tmax-1, Math.max(0, InterventionTimeStart + xScaleTimeInv(event.x - dragstarty)))\n    }\n\n    var dragend = function (d) {\n      lock = false\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n\n  var drag_intervention_end = function (){\n    var dragstarty = 0\n    var durationStart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.x  \n      durationStart = duration\n      Plock = Pmax\n      lock = true\n    }\n\n    var dragged = function (d) {\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\n      // console.log(event.x)\n      duration = Math.min(tmax-1, Math.max(0, durationStart + xScaleTimeInv(event.x - dragstarty)))\n    }\n\n    var dragend = function (d) {\n      lock = false\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n\n  $: parsed = \"\";\n  onMount(async () => {\n    var drag_callback_y = drag_y()\n    drag_callback_y(selectAll(\"#yAxisDrag\"))\n    var drag_callback_x = drag_x()\n    drag_callback_x(selectAll(\"#xAxisDrag\"))\n    var drag_callback_x2 = drag_x()\n    drag_callback_x2(selectAll(\"#xAxisDrag2\"))\n    var drag_callback_intervention = drag_intervention()\n    // drag_callback_intervention(selectAll(\"#interventionDrag\"))\n    drag_callback_intervention(selectAll(\"#dottedline\"))\n    // var drag_callback_intervention_end = drag_intervention_end()\n    // drag_callback_intervention_end(selectAll(\"#dottedline2\"))\n\n    if (typeof window !== 'undefined') {\n      parsed = queryString.parse(window.location.search)\n      if (!(parsed.logN === undefined)) {logN = parsed.logN}\n      if (!(parsed.I0 === undefined)) {I0 = parseFloat(parsed.I0)}\n      if (!(parsed.E0 === undefined)) {E0 = parseFloat(parsed.E0)}\n      if (!(parsed.R0 === undefined)) {R0 = parseFloat(parsed.R0)}\n      if (!(parsed.R0p === undefined)) {R0p = parseFloat(parsed.R0p)}\n      if (!(parsed.D_incbation === undefined)) {D_incbation = parseFloat(parsed.D_incbation)}\n      if (!(parsed.D_infectious === undefined)) {D_infectious = parseFloat(parsed.D_infectious)}\n      if (!(parsed.D_recovery_mild === undefined)) {D_recovery_mild = parseFloat(parsed.D_recovery_mild)}\n      if (!(parsed.D_recovery_severe === undefined)) {D_recovery_severe = parseFloat(parsed.D_recovery_severe)}\n      if (!(parsed.CFR === undefined)) {CFR = parseFloat(parsed.CFR)}\n      if (!(parsed.InterventionTime === undefined)) {InterventionTime = parseFloat(parsed.InterventionTime)}\n      if (!(parsed.retardo === undefined)) {retardo = parseFloat(parsed.retardo)}\n      if (!(parsed.R0t === undefined)) {R0t = parseFloat(parsed.R0t)}\n      if (!(parsed.duration === undefined)) {duration = parseFloat(parsed.duration)}\n      if (!(parsed.interpolation_steps === undefined)) {interpolation_steps = parseFloat(parsed.interpolation_steps)}\n      if (!(parsed.D_hospital_lag === undefined)) {D_hospital_lag = parseFloat(parsed.D_hospital_lag)}\n      if (!(parsed.P_SEVERE === undefined)) {P_SEVERE = parseFloat(parsed.P_SEVERE)}\n      if (!(parsed.Time_to_death === undefined)) {Time_to_death = parseFloat(parsed.Time_to_death)}\n\n    }\n  });\n\n  function lock_yaxis(){\n    Plock = Pmax\n    lock  = true\n  }\n\n  function unlock_yaxis(){\n    lock = false\n  }\n\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\n\n  let width  = 750;\n  let height = 500;\n  let height2 = 200;\n\n  $: xScaleTime = scaleLinear()\n    .domain([0, tmax])\n    .range([padding.left, width - padding.right]);\n\n  $: xScaleTimeInv = scaleLinear()\n    .domain([0, width])\n    .range([0, tmax]);\n\n  $: indexToTime = scaleLinear()\n    .domain([0, P.length])\n    .range([0, tmax])\n\n  window.addEventListener('mouseup', unlock_yaxis);\n\n  $: checked = [true, true, false, true, true,true,true,true]\n  $: active  = 0\n  $: active_ = active >= 0 ? active : Iters.length - 1\n\n  var Tinc_s = \"\\\\color{#CCC}{T^{-1}_{\\\\text{inc}}} \"\n  //var Tinf_s = \"\\\\color{#CCC}{T^{-1}_{\\\\text{inf}}}\"\n  var Tinf_s = \"\\\\color{#CCC}{T_{\\\\text{inf}}}\"\n  var Rt_s   = \"\\\\color{#CCC}{\\\\frac{\\\\mathcal{R}_{t}}{T_{\\\\text{inf}}}} \"\n  $: ode_eqn = katex.renderToString(\"\\\\frac{d S}{d t}=-\" +Rt_s +\"\\\\cdot IS,\\\\qquad \\\\frac{d E}{d t}=\" +Rt_s +\"\\\\cdot IS- \" + Tinc_s + \" E,\\\\qquad \\\\frac{d I}{d t}=\" + Tinc_s + \"E-\" + Tinf_s+ \"I, \\\\qquad \\\\frac{d R}{d t}=\" + Tinf_s+ \"I\", {\n    throwOnError: false,\n    displayMode: true,\n    colorIsTextColor: true\n  });\n\n  function math_inline(str) {\n    return katex.renderToString(str, {\n    throwOnError: false,\n    displayMode: false,\n    colorIsTextColor: true\n    });\n  }\n\n  function math_display(str) {\n    return katex.renderToString(str, {\n    throwOnError: false,\n    displayMode: true,\n    colorIsTextColor: true\n    });\n  }\n  \n  $: p_num_ind = 40\n\n  $: get_d = function(i){\n    return dIters(indexToTime(i), Iters[i])\n  }\n\n  function get_milestones(P){\n\n    function argmax(x, index) {\n      return x.map((x, i) => [x[index], i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];\n    }\n\n     //    Dead   Hospital          Recovered        Infected   Exposed\n    var milestones = []\n    for (var i = 0; i < P.length; i++) {\n      if (P[i][0] >= 99.5) {\n        milestones.push([i*dt, \"100 Muertos\"])\n        break\n      }\n    }\n\n    var i = argmax(P, 1)\n    milestones.push([i*dt, \"Pico: \" + format(\",\")(Math.round(P[i][1])) + \" internados\"])\n\n    milestones.push([0, \"Iinicio 3/3 - \"+retardo+\" días\"])\n    return milestones\n  }\n\n  $: milestones = get_milestones(P)\n  $: log = true\n\n  function retrieve_backend_csv(){\n\n      alert(\"Esta función requiere utilizar un servidor backend con nuestro modelo en R. Es posible\\n correr una versión full funcional en su propio computador corriendo epcalc y el backend (Ver más\\n detalles en https://github.com/ivco19/epyRba). Esta web pública no dispone de acceso, si\\n usted forma parte de algún organismo que utiliza esta versión de la calculadora y necesita\\n acceder a datos con precisión numérica alta, le pedimos que nos contacte\\n (información de contacto en https://ivco19.github.io/). \")\n\n// descomentar este bloque de codigo para poder descargar desde el backend\n// puede ser necesario cambiar el url del query dependiendo donde este el servidor funcionando.\n//   var dias=[]\n//   for (var i = 0; i < 365; i++) {\n//      dias.push(i)\n//   }\n//\n//var data = {\n//    'Time_to_death': Time_to_death,\n//    'D_incbation'  : D_incbation,\n//    'D_infectious' : D_infectious,\n//    'R0'           : R0,\n//    'R0p'          : R0p,\n//    'D_recovery_mild'  : D_recovery_mild,\n//    'D_recovery_severe': D_recovery_severe,\n//    'D_hospital_lag'   : D_hospital_lag,\n//    'retardo': retardo,\n//    'D_death': D_death,\n//    'p_fatal': CFR,\n//    'InterventionTime': InterventionTime,\n//    'InterventionAmt': InterventionAmt,\n//    'p_severe': P_SEVERE,\n//    'E0': E0,\n//    'duration': duration,\n//    'N': N,\n//    'I0': I0,\n//    'timepoints': dias\n//}\n//\n//\n//fetch('http://localhost:5001/seir', {\n//    method: 'POST',\n//    headers: {\n//        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n//    },\n//    body: \"query=\" + JSON.stringify(data)\n//}).then(res => {\n//    if(!res.ok)\n//    {\n//        alert('Backend error o query bad formed')\n//        throw new Error('Error en backend!');\n//    }\n//    return res;\n//}).then(data => {\n//    data.text().then(text => {\n//    filename = 'resultados_precisos.csv';\n//\n//    if (!text.match(/^data:text\\/csv/i)) {\n//      text = 'data:text/csv;charset=utf-8,' + text;\n//    }\n//\n//    var data, filename, link;\n//    data = encodeURI(text);\n//    link = document.createElement('a');\n//    link.setAttribute('href', data);\n//    link.setAttribute('download', filename);\n//    document.body.appendChild(link); // Required for FF\n//    link.click();\n//    document.body.removeChild(link);\n//\n//    });\n//}).catch(err => {\n//    throw new Error('Error!!');\n//});\n//\n  }\n\n\n  function download_all_csv(){\n\n     var Soln            = get_solution(1, N, I0,E0, R0s, D_incbation,\n     D_infectious,D_recovery_mild, D_hospital_lag, D_recovery_severe, D_death, P_SEVERE, CFR,\n     InterventionTime,retardo, duration,40,365)\n    var Pn              = Soln[\"P\"]\n    var dias              = Soln[\"dias\"]\n    download_csv({ filename:\"resultados_aproximados.csv\",header:['Fatalidades','Hospitalizado','Recuperado','Infeccioso','Expuesto'],data:Pn, scale_factor:1, dias:dias });\n    //download_csv({ filename: ,header:['Susceptible', 'Expuesto', 'Infeccioso', 'Recuperándose (caso leve)', 'Recuperándose (caso severo en el hogar)  ', 'Recuperándose (caso severo en el hospital)', 'Recuperándose (caso fatal)', 'Recuperado (caso leve)', 'Recuperado ( caso severo)', 'Fatalidades'], data:Iters, scale_factor:N, dias:dias});\n  }\n  function download_csv(args) {\n    var data, filename, link;\n    var csv = \"Día,\";\n\n    if(args.header.length!=args.data[0].length){ throw 'header doesn\\'t match data';}\n    for(var i=0;i<args.header.length;i++){\n      csv+=args.header[i]+',';\n    }\n    csv+='\\n';\n\n    for(var i = 0; i < args.data.length; i++){\n      csv+=Math.round(args.dias[i])+',';\n      for(var j=0;j<args.data[i].length;j++){\n        csv+=args.data[i][j]*args.scale_factor+',';\n      }\n      csv+='\\n';\n    }\n\n    if (csv == null) return;\n\n    filename = args.filename || 'chart-data.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n      csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n\n    data = encodeURI(csv);\n    link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    document.body.appendChild(link); // Required for FF\n    link.click();\n    document.body.removeChild(link);\n  }\n</script>\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.css\" integrity=\"sha384-bsHo4/LA+lkZv61JspMDQB9QP1TtO4IgOf2yYS+J6VdAYLVyx1c3XKcsHh0Vy8Ws\" crossorigin=\"anonymous\">\n\n<style>\n  .small { font: italic 6px Source Code Pro; }\n  @import url('https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap');\n\n\n  h2 {\n    margin: auto;\n    width: 950px;\n    font-size: 40px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    font-weight: 300;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    padding-bottom: 30px\n  }\n\n  .center {\n    margin: auto;\n    width: 950px;\n    padding-bottom: 20px;\n    font-weight: 300;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    color:#666;\n    font-size: 16.5px;\n    text-align: justify;\n    line-height: 24px\n  }\n\n  .ack {\n    margin: auto;\n    width: 950px;\n    padding-bottom: 20px;\n    font-weight: 300;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    color:#333;\n    font-size: 13px;\n  }\n\n  .row {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    margin: auto;\n    display: flex;\n    width: 948px;\n    font-size: 13px;\n  }\n\n  .caption {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    font-size: 13px;    \n  }\n\n  .column {\n    flex: 158px;\n    padding: 0px 5px 5px 0px;\n    margin: 0px 5px 5px 5px;\n    /*border-top: 2px solid #999*/\n  }\n\n  .minorTitle {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    margin: auto;\n    display: flex;\n    width: 950px;\n    font-size: 17px;\n    color: #666;\n  }\n\n  .minorTitleColumn{\n    flex: 60px;\n    padding: 3px;\n    font-size: 20px;\n    border-bottom: 2px solid #999;\n  }\n\n\n  .paneltext{\n    position:relative;\n    height:130px;\n  }\n\n  .paneltitle{\n    color:#777; \n    line-height: 17px; \n    padding-bottom: 4px;\n    font-weight: 700;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n  }\n\n  .paneldesc{\n    color:#888; \n    text-align: left;\n    font-weight: 300;\n  }\n\n  .slidertext{\n    color:#555; \n    line-height: 7px; \n    padding-bottom: 0px; \n    padding-top: 7px;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    font-family: 'Source Code Pro', monospace;\n    font-size: 10px;\n    text-align: right;\n    /*font-weight: bold*/\n  }\n    \n  .range {\n    width: 100%;\n  }\n\n  .chart {\n    width: 100%;\n    margin: 0 auto;\n    padding-top:0px;\n    padding-bottom:10px;\n  }\n\n  .legend {\n    color: #888;\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n    height: 100px;\n    left: 20px;\n    top: 4px;\n    position: absolute;\n  }\n\n  .legendtitle {\n    color:#777; \n    font-size:13px;\n    padding-bottom: 6px;\n    font-weight: 600;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n  }\n\n\n  .legendtext{\n    color:#888; \n    font-size:13px;\n    padding-bottom: 5px;\n    font-weight: 300;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    line-height: 14px;\n  }\n\n  .legendtextnum{\n    color:#888; \n    font-size:13px;\n    padding-bottom: 5px;\n    font-weight: 300;\n    line-height: 12px;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    left: -3px;\n    position: relative;\n  }\n\n  .tick {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    font-size: .725em;\n    font-weight: 200;\n    font-size: 13px\n  }\n\n  td { \n    text-align: left;\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    border-bottom: 1px solid #DDD;\n    border-collapse: collapse;\n    padding: 3px;\n    /*font-size: 14px;*/\n  }\n\n  tr {\n    border-collapse: collapse;\n    border-spacing: 15px;\n  }\n\n  .eqn {\n    font-family: nyt-franklin,helvetica,arial,sans-serif;\n    margin: auto;\n    display: flex;\n    flex-flow: row wrap;\n    width: 950px;\n    column-count: 4;\n    font-weight: 300;\n    color:#666;\n    font-size: 16.5px;\n  }\n\n  th { font-weight: 500; text-align: left; padding-bottom: 5px; vertical-align: text-top;     border-bottom: 1px solid #DDD; }\n\n  a:link { color: grey; }\n  a:visited { color: grey; }\n\n</style>\n\n<h2>Calculadora Epidémica SEIR</h2>\n<button id=\"downloadCSV\" on:click={download_all_csv}>Descargar resultados <br> (aproximados ~1%)</button>\n<button id=\"downloadR\" on:click={retrieve_backend_csv}>Descargar resultados <br> (precisos)</button>\n  \n<div class=\"chart\" style=\"display: flex; max-width: 1120px\">\n\n  <div style=\"flex: 0 0 270px; width:270px;\">\n    <div style=\"position:relative; top:48px; right:-115px\">\n      <div class=\"legendtext\" style=\"position:absolute; left:-16px; top:-34px; width:50px; height:\n      100px; font-size: 13px; line-height:16px; font-weight: normal; text-align: center\"><b>Día</b><br> {Math.round(indexToTime(active_))}</div>\n\n      <!-- Susceptible -->\n      <div style=\"position:absolute; left:0px; top:0px; width: 180px; height: 100px\">\n\n        <span style=\"pointer-events: none\"><Checkbox color=\"#CCC\"/></span>\n        <Arrow height=\"41\"/>\n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Susceptibles</div>\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][0]))} \n                                  ({ (100*Iters[active_][0]).toFixed(2) }%)</i></div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px;\n\t  color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[0]))} / días</i>\n                                 </div>\n          </div>\n        </div>\n          <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px; position:relative;\">Población no inmune.</div>\n\n      </div>\n\n      <!-- Exposed -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*1}px; width: 180px; height: 100px\">\n\n        <Checkbox color=\"{colors[4]}\" bind:checked={checked[4]}/>      \n        <Arrow height=\"41\"/>\n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Expuestos</div>\n\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][1]))} \n                                  ({ (100*Iters[active_][1]).toFixed(2) }%)</div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[1])) } / días</i>\n                                 </div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px;\n\tposition:relative;\">Población en periodo de incubación.</div>\n\n      </div>\n\n      <!-- Infected -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*2}px; width: 180px; height: 100px\">\n\n        <Checkbox color=\"{colors[3]}\" bind:checked={checked[3]}/>\n        <Arrow height=\"41\"/>   \n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Infecciosos</div>\n          <div style=\"padding-top: 5px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][2]))} \n                                  ({ (100*Iters[active_][2]).toFixed(2) }%)</div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[2])) } / Día</i>\n                                 </div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4px; position:relative;\">Número de infecciones circulando <i>activamente</i>.</div>\n\n\n      </div>\n\n      <!-- Removed -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*3}px; width: 180px; height: 100px\">\n        <Checkbox color=\"grey\" callback={(s) => {checked[1] = s; checked[0] = s; checked[2] = s} }/>\n        <Arrow height=\"56\" arrowhead=\"\" dasharray=\"3 2\"/>\n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Removidos</div>\n          <div style=\"padding-top: 10px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N* (1-Iters[active_][0]-Iters[active_][1]-Iters[active_][2])+I0 ))} \n                                  ({ ((100*(1-Iters[active_][0]-Iters[active_][1]-Iters[active_][2]-I0/N))).toFixed(2) }%)</div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span>\n\t  <i>{formatNumber(Math.round(N*(get_d(active_)[3]+get_d(active_)[4]+get_d(active_)[5]+get_d(active_)[6]+get_d(active_)[7])\n\t  )) } / días</i>\n                                 </div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 4x; position:relative;\">Población no infecciosa por aislamiento o inmunidad. </div>\n\n      </div>\n\n      <!-- Recovered -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+14-3}px; width: 180px; height: 100px\">\n        <Checkbox color=\"{colors[2]}\" bind:checked={checked[2]}/>\n        <Arrow height=\"23\" arrowhead=\"\" dasharray=\"3 2\"/>\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Recuperados</div>\n\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][7]+Iters[active_][8]) ))} \n                                  ({ (100*(Iters[active_][7]+Iters[active_][8])).toFixed(2) }%)</div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 8px; position:relative;\">Recuperados</div>\n\n      </div>\n\n      <!-- Hospitalized -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+57}px; width: 180px; height: 100px\">\n        <Arrow height=\"43\" arrowhead=\"\" dasharray=\"3 2\"/>\n        <Checkbox color=\"{colors[1]}\" bind:checked={checked[1]}/>\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Hospitalizados</div>\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*(Iters[active_][5]+Iters[active_][6]) ))} \n                                  ({ (100*(Iters[active_][5]+Iters[active_][6])).toFixed(2) }%)</div>\n          </div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*(get_d(active_)[5]+get_d(active_)[6]))) } / días</i>\n                                 </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 10px; position:relative;\">Internaciones activas.</div>\n\n      </div>\n\n\n      <div style=\"position:absolute; left:0px; top:{legendheight*4 + 120+2}px; width: 180px; height: 100px\">\n        <Arrow height=\"40\" arrowhead=\"\" dasharray=\"3 2\"/>\n\n        <Checkbox color=\"{colors[0]}\" bind:checked={checked[0]}/>\n\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Difuntos</div>\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">          \n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:3px; color:#CCC\">∑</span> <i>{formatNumber(Math.round(N*Iters[active_][9]))} \n                                  ({ (100*Iters[active_][9]).toFixed(2) }%)</div>\n          <div class=\"legendtextnum\"><span style=\"font-size:12px; padding-right:2px; color:#CCC\">Δ</span> <i>{formatNumber(Math.round(N*get_d(active_)[9])) } / días</i>\n                                 </div>\n          </div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 10px; position:relative;\">Muertes.</div>\n      </div>\n\n      <div style=\"position:absolute; left:0px; top:{legendheight*5 + 120+2}px; width: 180px; height: 100px\">\n        <Checkbox color=\"{colors[7]}\" bind:checked={checked[7]}/>\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">I+R+D</div>\n        </div>\n        <div class=\"legendtext\" style=\"text-align: right; width:105px; left:-111px; top: 1px; position:relative;\">Confirmados por el modelo.</div>\n      </div>\n\n\n     <!-- Data points -->\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+220}px; width: 180px; height: 100px\">\n        <Checkbox color=\"{colors[5]}\" bind:checked={checked[5]}/>\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Confirmados Arg.</div>\n          <div class=\"legendtextnum\"><i>(a t - {retardo} días)</i></div>\n        </div>\n      </div>\n      <div style=\"position:absolute; left:0px; top:{legendheight*4+260}px; width: 180px; height: 100px\">\n        <Checkbox color=\"{colors[6]}\" bind:checked={checked[6]}/>\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div class=\"legendtitle\">Decesos Arg.</div>\n        </div>\n      </div>\n\n      <div style=\"position:absolute; left:0px; top:{legendheight*8 + 120+2}px; width: 180px; height: 100px\">\n        <div class=\"legend\" style=\"position:absolute;\">\n          <div align=\"right\" class=\"legendtitle\">Ritmo reroductivo <br> básico {@html math_inline(\"\\\\mathcal{R}_0\")}</div>\n          <div style=\"padding-top: 3px; padding-bottom: 1px\">          \n          <div align=\"right\" class=\"legendtextnum\"><i> parámetros de control <br> abajo</i> </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div style=\"flex: 0 0 890px; width:890px; height: {height+128}px; position:relative;\">\n\n      <div style=\"position:relative; top:60px; left: 10px\">\n        <Polys bind:checked={checked}\n             bind:active={active}\n             y = {P} \n             toto = {rm} \n             xmax = {Xmax} \n             total_infected = {total_infected} \n             deaths = {deaths} \n             total = {total} \n             timestep={timestep}\n             tmax={tmax}\n             N={N}\n             ymax={lock ? Plock: Pmax}\n\t           retardo={retardo}\n             colors={colors}\n             log={log}/>\n      </div>\n\n      <div id=\"xAxisDrag\"\n           style=\"pointer-events: all;\n                  position: absolute;\n                  top:{height+80}px;\n                  left:{0}px;\n                  width:{780}px;\n                  background-color:#222;\n                  opacity: 0;\n                  height:25px;\n                  cursor:col-resize\">\n      </div>\n\n      <div id=\"yAxisDrag\"\n           style=\"pointer-events: all;\n                  position: absolute;\n                  top:{55}px;\n                  left:{0}px;\n                  width:{20}px;\n                  background-color:#222;\n                  opacity: 0;\n                  height:425px;\n                  cursor:row-resize\">\n      </div>\n      <!-- Medidas previas -->\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:120px; left:10px; pointer-events: none\">\n        <div style=\"\n            position: absolute;\n            top:-38px;\n            left:{xScaleTime(IntervPrevia+retardo)}px;\n            visibility: {(xScaleTime(IntervPrevia+retardo) < (width - padding.right)) ? 'visible':'hidden'};\n            width:2px;\n            background-color:#FFF;\n            border-right: 1px dashed black;\n            cursor:col-resize;\n            height:{height}px\">\n            <div style=\"flex: 0 0 160px; flex-direction:row width:120px; position:relative; top:-125px; left: -111px\" >\n              <div class=\"caption\" align=\"right\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:100px; border-right: 2px solid #777; padding: 5px 7px 7px 7px; \">      \n                Medidas <br>Previas (13/3)\n              </div>\n            </div>\n            <div style=\"flex: 0 0 10px; flex-direction:row width:120px; position:relative; top:-125px; left: 1px\" >\n              <div class=\"caption\" align=\"left\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:100px; padding: 5px 7px 7px 7px; \">      \n                 &nbsp;→\n              </div>\n            </div>\n\n          </div>\n      </div>\n      <!-- Cuarentena inicio -->\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:120px; left:10px; pointer-events: none\">\n        <div style=\"\n            position: absolute;\n            top:-38px;\n            left:{xScaleTime(InterventionTime+retardo)}px;\n            visibility: {(xScaleTime(InterventionTime+retardo) < (width - padding.right)) ? 'visible':'hidden'};\n            width:2px;\n            background-color:#FFF;\n            border-right: 1px dashed black;\n            cursor:col-resize;\n            height:{height}px\">\n            <div style=\"flex: 0 0 160px; flex-direction:row width:120px; position:relative; top:-125px; left: 1px\" >\n              <div class=\"caption\" align=\"center\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:100px; border-left: 2px solid #777; padding: 5px 7px 7px 7px; \">      \n                Cuarentena Social<br>\n                ←&nbsp;→\n              </div>\n            </div>\n          </div>\n      </div>\n      <!-- Cuarentena final -->\n      <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:120px; left:10px; pointer-events: none\">\n        <div style=\"\n            position: absolute;\n            top:-38px;\n            left:{xScaleTime(InterventionTime+duration+retardo)}px;\n            visibility: {(xScaleTime(InterventionTime+duration+retardo) < (width - padding.right)) ? 'visible':'hidden'};\n            width:2px;\n            background-color:#FFF;\n            border-right: 1px dashed black;\n            cursor:col-resize;\n            height:{height}px\">\n            <div style=\"flex: 0 0 160px; flex-direction:row width:120px; position:relative; top:-125px; left: 1px\" >\n              <div class=\"caption\" style=\"pointer-events: none; position: absolute; left:0; top:40px; width:100px; border-left: 2px solid #777; padding: 5px 7px 7px 7px; \">      \n              <div style=\"pointer-events: all\">\n                Fin Cuarentena <br>\n                {duration-12}/4→\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n\n      <div style=\"pointer-events: none;\n                  position: absolute;\n                  top:{height+84}px;\n                  left:{0}px;\n                  width:{780}px;\n                  opacity: 1.0;\n                  height:25px;\n                  cursor:col-resize\">\n            {#each milestones as milestone}\n              <div style=\"position:absolute; left: {xScaleTime(milestone[0])+8}px; top: -30px;\">\n                <span style=\"opacity: 0.3\"><Arrow height=30 arrowhead=\"#circle\" dasharray = \"2 1\"/></span>\n                  <div class=\"tick\" style=\"position: relative; left: 0px; top: 35px; max-width: 130px; color: #BBB; background-color: white; padding-left: 4px; padding-right: 4px\">{@html milestone[1]}</div>\n              </div>\n            {/each}\n      </div>\n    \n     <div style=\"opacity:{xScaleTime(InterventionTime) >= 550? 0.2 : 1.0}\"> \n      <div class=\"tick\" style=\"color: #AAA; position:absolute; pointer-events:all; left:690px; top: 10px\">\n        <Checkbox color=\"#CCC\" bind:checked={log}/><div style=\"position: relative; top: 4px; left:20px\">escala logarítmica</div>\n     </div>\n    </div>\n\n   </div>\n\n</div>\n\n\n<div class=\"chart\" style=\"display: flex; max-width: 1120px\">\n  <div style=\"flex: 0 0 270px; width:270px;\"> </div>\n  <div style=\"flex: 0 0 890px; width:890px; height: 200px; position:relative;\">\n      <div style=\"position:relative; top:0px; left: 10px\">\n        <Polys2 bind:checked={checked}\n             bind:active={active}\n             y = {R0func} \n             xmax = {Xmax} \n             total_infected = {total_infected} \n             deaths = {deaths} \n             total = {total} \n             timestep={timestep}\n             tmax={tmax}\n             N={N}\n             ymax={Math.max(...R0s.values)}\n             InterventionTime={InterventionTime}\n\t           retardo={retardo}\n             colors={colors}\n             log={false}/>\n\n      </div>\n      <div id=\"xAxisDrag2\"\n           style=\"pointer-events: all;\n                  position: absolute;\n                  top:{height2}px;\n                  left:{0}px;\n                  width:{780}px;\n                  background-color:#222;\n                  opacity: 0;\n                  height:25px;\n                  cursor:col-resize\">\n      </div>\n\n      <!-- Medidas previas -->\n      <div style=\"position: absolute; width:{width+15}px; height: {height2}px; position: absolute; top:40px; left:10px; pointer-events: none\">\n        <div style=\"\n            position: absolute;\n            top:-38px;\n            left:{xScaleTime(IntervPrevia+retardo)}px;\n            visibility: {(xScaleTime(IntervPrevia+retardo) < (width - padding.right)) ? 'visible':'hidden'};\n            width:2px;\n            background-color:#FFF;\n            border-right: 1px dashed black;\n            cursor:col-resize;\n            height:{height2}px\">\n       \n          </div>\n      </div>\n      <!-- Cuarentena inicio -->\n      <div style=\"position: absolute; width:{width+15}px; height: {height2}px; position: absolute; top:40px; left:10px; pointer-events: none\">\n        <div style=\"\n            position: absolute;\n            top:-38px;\n            left:{xScaleTime(InterventionTime+retardo)}px;\n            visibility: {(xScaleTime(InterventionTime+retardo) < (width - padding.right)) ? 'visible':'hidden'};\n            width:2px;\n            background-color:#FFF;\n            border-right: 1px dashed black;\n            cursor:col-resize;\n            height:{height2}px\">\n        </div>\n      </div>\n      <!-- Cuarentena final -->\n      <div style=\"position: absolute; width:{width+15}px; height: {height2}px; position: absolute; top:40px; left:10px; pointer-events: none\">\n        <div style=\"\n            position: absolute;\n            top:-38px;\n            left:{xScaleTime(InterventionTime+duration+retardo)}px;\n            visibility: {(xScaleTime(InterventionTime+duration+retardo) < (width - padding.right)) ? 'visible':'hidden'};\n            width:2px;\n            background-color:#FFF;\n            border-right: 1px dashed black;\n            cursor:col-resize;\n            height:{height2}px\">\n          </div>\n      </div>\n\n      </div>\n\n  </div>\n\n<!-- <div style=\"height:220px;\">\n  <div class=\"minorTitle\">\n    <div style=\"margin: 0px 0px 5px 4px\" class=\"minorTitleColumn\">Dinámica de transmisión</div>\n    <div style=\"flex: 0 0 20; width:20px\"></div>\n    <div style=\"margin: 0px 4px 5px 0px\" class=\"minorTitleColumn\">Dinámica Clínica</div>\n  </div>-->\n  <p class = \"center\">\n  <div class=\"row\">\n    <div style=\"flex: 0 0 20 width:948px\" class=\"minorTitleColumn\">Dinámica de transmisión</div>\n  </div>\n  <div class=\"row\">\n    <div style=\"flex: 0 0 20; width:20px\"></div>\n\n    <div class=\"column\">\n      <div class=\"paneltitle\" style=\"padding-top: 10px\">Parámetros de Población</div>\n      <div class=\"paneldesc\" style=\"height:26px\">Tamaño poblacional</div>\n      <div class=\"slidertext\">{format(\",\")(Math.round(N))}</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={logN} min={5} max=25 step=0.01>\n      <input style=\"margin-bottom: 8px\" type=integer bind:value={N} min={Math.exp(5)} max={Math.exp(25)} step=1.0>\n      <div class=\"paneldesc\" style=\"height:20px; border-top: 1px solid #EEE; padding-top: 10px\">Número de infecciones iniciales<br></div>\n      <div class=\"slidertext\"style=\"padding-top: 15px\">{I0}</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={I0} min={1} max=100 step=1>\n      <input style=\"margin-bottom: 8px\" type=number bind:value={I0} min={1} max=100 step=1>\n      <div class=\"paneldesc\" style=\"height:20px; border-top: 1px solid #EEE; padding-top: 10px; margin-bottom: 8px\">Número de expuestos iniciales<br></div>\n      <div class=\"slidertext\">{E0}</div>\n      <input class=\"range\" type=range bind:value={E0} min={1} max=100 step=1>\n      <input type=number bind:value={E0} min={1} max=100 step=1>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"paneltitle\" style=\"padding-top: 10px\">Intervenciones sobre {@html math_inline(\"\\\\mathcal{R}_0\")} </div>\n      <div class=\"paneldesc\"> Al comenzar la epidemia en el país. <br></div>\n      <div class=\"slidertext\">{@html math_inline(\"\\\\mathcal{R}_0\")}={R0}</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={R0} min=0.01 max=10 step=0.01> \n      <input style=\"margin-bottom: 8px\" type=number bind:value={R0} min=0.01 max=10 step=0.01>\n      <div class=\"paneldesc\" style=\"height:20px; border-top: 1px solid #EEE; padding-top: 10px\">Por medidas previas a la cuarentena (desde el 12/3) <br></div>\n      <div class=\"slidertext\">{@html math_inline(\"\\\\mathcal{R}_0\")}={R0i}</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={R0i} min=0.01 max={R0} step=0.01> \n      <input  style=\"margin-bottom: 8px\" type=number bind:value={R0i} min=0.01 max={R0} step=0.01>\n      <div class=\"paneldesc\" style=\"height:20px; border-top: 1px solid #EEE; padding-top: 10px\">Durante la cuarentena (desde 20/3) <br></div>\n      <div class=\"slidertext\">{@html math_inline(\"\\\\mathcal{R}_0\")}={R0t}</div>\n      <input class=\"range\" type=range bind:value={R0t} min=0.01 max={R0} step=0.01> \n      <input type=number bind:value={R0t} min=0.01 max={R0} step=0.01>\n    </div>\n    <div class=\"column\">\n      <div class=\"paneltitle\" style=\"padding-top: 10px\">Intervenciones sobre {@html math_inline(\"\\\\mathcal{R}_0\")} </div>\n      <div class=\"paneldesc\" >Duración de cuarentena <br></div>\n      <div class=\"slidertext\"  style=\"margin-bottom: 7px\" >{(duration).toFixed(0)} días</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={duration} min=0 max=120 step=1> \n      <input style=\"margin-bottom: 8px\" type=number bind:value={duration} min=0 max=120 step=1>\n    <div class=\"paneldesc\" style=\"height:20px; border-top: 1px solid #EEE; padding-top: 11px\">{@html math_inline(\"\\\\mathcal{R}_0\")} Luego del fin de la cuarentena <br></div>\n      <div class=\"slidertext\">{@html math_inline(\"\\\\mathcal{R}_0\")}={R0p}</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={R0p} min=0.01 max={R0} step=0.01> \n      <input type=number bind:value={R0p} min=0.01 max={R0} step=0.01>\n\n    </div>\n\n\n    <div class=\"column\">\n      <div class=\"paneltitle\" style=\"padding-top: 10px\">Tiempos</div>\n      <div class=\"paneldesc\">Periodo de incubación, {@html math_inline(\"T_{\\\\text{inc}}\")}.<br></div>\n      <div class=\"slidertext\" style=\"margin-bottom: 6px\">{(D_incbation).toFixed(2)} días</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={D_incbation} min={0.15} max=24 step=0.0001>\n      <input style=\"margin-bottom: 8px\"type=number bind:value={D_incbation} min={0.15} max=24 step=0.0001>\n      <div class=\"paneldesc\" style=\"height:28px; border-top: 1px solid #EEE; padding-top: 10px\">Periodo infeccioso, {@html math_inline(\"T_{\\\\text{inf}}\")}.<br></div>\n      <div class=\"slidertext\">{D_infectious} días</div>\n      <input class=\"range\"style=\"margin-bottom: 8px\" type=range bind:value={D_infectious} min={0} max=24 step=0.01>\n      <input style=\"margin-bottom: 8px\"type=number bind:value={D_infectious} min={0} max=24 step=0.01>\n      <div class=\"paneldesc\" style=\"height:20px; border-top: 1px solid #EEE; padding-top: 10px; margin-bottom: 8px\">Intervalo entre síntomas y confirmación del test<br></div>\n      <div class=\"slidertext\">{retardo} días</div>\n      <input class=\"range\" type=range bind:value={retardo} min={1} max=20 step=1>\n      <input style=\"margin-bottom: 8px\"type=number bind:value={retardo} min={1} max=20 step=1>\n\n    </div>\n\n</div>\n\n  <p class = \"center\">\n  <div class=\"row\">\n    <div style=\"flex: 0 0 20 width:948px\" class=\"minorTitleColumn\">Dinámica Clínica</div>\n  </div>\n  <div class=\"row\">\n   <div style=\"flex: 0 0 20; width:20px\"></div> \n\n    <div class=\"column\">\n      <div class=\"paneltitle\"style=\"padding-top: 10px\">Estadística de Morbilidad</div>\n      <div class=\"paneldesc\" style=\"height:30px\">Tasa de mortandad.<br></div>\n      <div class=\"slidertext\">{(CFR*100).toFixed(2)} %</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={CFR} min={0} max=1 step=0.0001>\n      <input style=\"margin-bottom: 8px\" type=number bind:value={CFR} min={0} max=1 step=0.0001>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Tiempo desde el final de la incubación a la muerte.<br></div>\n      <div class=\"slidertext\">{Time_to_death} días</div>\n      <input class=\"range\" type=range bind:value={Time_to_death} min={(D_infectious)+0.1} max=100 step=0.01>\n      <input type=number bind:value={Time_to_death} min={(D_infectious)+0.1} max=100 step=0.01>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"paneltitle\"style=\"padding-top: 10px\">Tiempos de Recuperación</div>\n      <div class=\"paneldesc\" style=\"height:30px\">Duración de la estadía en el hospital<br></div>\n      <div class=\"slidertext\">{D_recovery_severe} días</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\" type=range bind:value={D_recovery_severe} min={0.1} max=100 step=0.01>\n      <input style=\"margin-bottom: 8px\" type=number bind:value={D_recovery_severe} min={0.1} max=100 step=0.01>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Tiempo de recuperación en casos leves<br></div>\n      <div class=\"slidertext\">{D_recovery_mild} días</div>\n      <input class=\"range\" type=range bind:value={D_recovery_mild} min={0.5} max=100 step=0.01>\n      <input type=number bind:value={D_recovery_mild} min={0.5} max=100 step=0.01>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"paneltitle\"style=\"padding-top: 10px\">Estadística hospitalaria</div>\n      <div class=\"paneldesc\" style=\"height:30px\">Tasa de hospitalización.<br></div>\n      <div class=\"slidertext\">{(P_SEVERE*100).toFixed(2)} %</div>\n      <input class=\"range\" style=\"margin-bottom: 8px\"type=range bind:value={P_SEVERE} min={0} max=1 step=0.0001>      \n      <input style=\"margin-bottom: 8px\"type=number bind:value={P_SEVERE} min={0} max=1 step=0.0001>\n      <div class=\"paneldesc\" style=\"height:29px; border-top: 1px solid #EEE; padding-top: 10px\">Tiempo de hospitalización.<br></div>\n      <div class=\"slidertext\">{D_hospital_lag} días</div>\n      <input class=\"range\" type=range bind:value={D_hospital_lag} min={0.5} max=100 step=0.01>\n      <input type=number bind:value={D_hospital_lag} min={0.5} max=100 step=0.01/>\n    </div>\n\n</div>\n<div style=\"position: relative; height: 12px\"></div>\n\n<p class = \"center\"> \nEste proyecto se encuentra en el marco de las actividades llevadas a cabo por el grupo\n<a href=\"https://ivco19.github.io/\">Arcovid19</a>.\nLa presente calculadora implementa el modelo clásico epidemiológico &mdash \n<b><a href=\"https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology#The_SEIR_model\">SEIR</a></b> (<b>S</b>usceptible → <span style=\"color:{colors[4]}\"><b>E</b></span>xposed → <span style=\"color:{colors[3]}\"><b>I</b></span>nfected → <span><b>R</b></span>emoved, en inglés), y esta basada en el trabajo del \n<a href=\"https://gabgoh.github.io/\">Dr. Gabriel Goh</a> (<a href=\"https://github.com/gabgoh/epcalc\">código fuente original</a>).\nEl modelo SEIR es un modelo idealizado de propagación utilizado comunmente en algunas\ninvestigaciones actuales, e.g. [<a\nhref=\"https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(20)30260-9/fulltext\">Wu, et.\nal</a>, <a href =\n\"https://cmmid.github.io/topics/covid19/current-patterns-transmission/wuhan-early-dynamics.html\">Kucharski\net. al</a>]. La dinámica del modelo es caracterizada mediante un conjunto de cuatro ecuaciones\ndiferenciales ordinarias que corresponden a los diferentes estadios de la enfermedad durante su\npropagación en una dada población: <span style=\"color:#777\">{@html ode_eqn}</span> Además de la\ndinámica de transmisión, este modelo permite cargar mediante parámetros de entrada información\nsuplementaria como la tasa de mortalidad y la carga de atención médica.\n</p>\n<p class =\"center\"> Con respecto a la versión del Dr. Goh se añadieron nuevos varias mejoras, el\ncódigo fuente es libre y puede descargarse desde el siguiente <a\nhref=\"https://github.com/ivco19/epcalc\"> repositorio GIT</a>. Algunas de las modificaciones son:</p>\n<p class =\"center\">- Definir la duración de la cuarentena \n</p>\n<p class =\"center\">- Controlar el ritmo reproductivo durante y a la salida de la cuarentena.\n</p>\n<p class =\"center\">- Debido a que la detección de nuevos casos es un procedimiento que puede tardar varios\ndías, se añadió un tiempo de retardo para modelar la demora del efecto que tiene la cuarentena\nen el número de casos activos (ver figura 1 en <a\nhref=\"https://jamanetwork.com/journals/jama/fullarticle/2762130\">Wu y McGoogan</a>). Si dispusieramos en los datos oficiales del día cuando se desarrollaron los\nsíntomas de cada caso ésta traslación del eje temporal no sería necesaria. Debido a esto la\nserie temporal de fallecidos se encuentra desplazada en el mismo intervalo de tiempo (ya que los\nfallecidos se supone que no tienen demora en ser informados).\n</p>\n\n<p class =\"center\">- Se añadió en forma de puntos los casos activos y las muertes de COVID-19 en Argentina, para permitir\nvisualizar con la applet como la variación de parámetros impacta en el ajuste de los mismos.\nLos datos se cargan automáticamente de un repositorio digital que se genera a partir del parseo de los informes oficiales de la nación.\nEl código fuente del software que genera el repositorio y las librerias para maniuplación de los datos en\npython se encuentra en este <a href=\"https://github.com/ivco19/libs\">repositorio</a>\nLos datos poseen el siguiente DOI:\n\nLuczywo, N. A., Daza, V., Koraj, M., Dominguez, M., Lares, M., Paz, D. J., Quiroga, R., Rios, M. E. D. L., Sánchez, B. O., Stasyszyn, F., & Cabral, J. B. (2020). Infecciones de COVID-19 en Argentina. Unpublished. \n<a href=\"https://doi.org/10.13140/RG.2.2.22519.78246\">https://doi.org/10.13140/RG.2.2.22519.78246</a>\n</p>\n\n<p class =\"center\">- En los parámetros por default se ajustó la curva de casos a partir del día 5, ya que como muchos\nya notaron a partir de ese momento empieza a evidenciarse el comportamiento exponencial.\nEncontré que no solo debía ajustar el parámetro R0, si no que además era necesiario asumir\nun número de casos expuestos mayor a los 9 casos infectados de ese día, lo cual es razonable,\nya que uno espera que antes de presentar síntomas o de ser detectado el caso, éste pueda exponer\na más personas. \n</p>\n\n<p class =\"center\">\nGracias a la generosidad de Exequiel Aguirre de la Unidad de Emergencias y Alertas Tempranas de\nCONAE, se añadió la facilidad de poder descargar los datos del modelo implementado en java script a un archivo csv, que facilita \nsu manipulacion en planillas de cálculo. Los resultados este modelo tienen un error relativo\npor debajo del 1%. Gracias al proyecto <a href=\"https://github.com/ivco19/epyRba\">EPyRBa</a> pudimos implementar una versión en R del modelo que permite\ndescargar en archivo csv con una precisión mayor al 0.000001%. El desarrollo de esta\ncalculadora no hubiese sido posible sin los aportes significativos de Juan Cabral, Rodrigo Quiroga,\ny todo el equipo de <a href=\"https://github.com/ivco19\">Arcovid19</a>. En especial agradecemos el\napoyo y asesoría de Mario Lamfri. Este proyecto público da soporte a una versión desarrollada para\nel Ministerio de Salud de la Provincia de Córdoba.\n</p>\n\n\n\n<p class = \"center\">\nEsta calculadora puede utilizarse para medir el riesgo de exposición a la enfermedad para un día determinado de la epidemia:\nPor ejemplo la probabilidad de infectarse en el día {Math.round(indexToTime(active_))} dado <a\nhref=\"https://www.cdc.gov/coronavirus/2019-ncov/hcp/guidance-risk-assesment-hcp.html\">contactos cercanos</a> con <input type=\"text\" style=\"width:{Math.ceil(Math.log10(p_num_ind))*9.5 + 5}px; font-size: 15.5px; color:#777\" bind:value={p_num_ind}> sujetos es de {((1-(Math.pow(1 - (Iters[active_][2])*(0.45/100), p_num_ind)))*100).toFixed(5)}% dada una <a href=\"https://glosarios.servidor-alicante.com/epidemiologia/tasa-de-ataque\">tasa de de ataque</a> del 0.45% [<a href=\"https://www.cdc.gov/mmwr/volumes/69/wr/mm6909e1.htm?s_cid=mm6909e1_w\">Burke et. al</a>].\n</p>\n\n\n<p class = \"center\">\nA continuación se presenta una muestra de estimaciones de parámetros epidémicos:\n</p>\n\n<div class=\"center\">\n<table style=\"width:100%; margin:auto; font-weight: 300; border-spacing: inherit\">\n  <tr>\n    <th></th>\n    <th>Lugar</th>\n    <th>Ritmo reproductivo<br> {@html math_inline(\"\\\\mathcal{R}_0\")}</th>\n    <th>Periodo de incubación<br> {@html math_inline(\"T_{\\\\text{inc}}\")} (días)</th>\n    <th>Periodo infeccioso<br> {@html math_inline(\"T_{\\\\text{inf}}\")} (días)</th>\n  </tr>\n  <tr>\n    <td width=\"27%\"><a href = \"https://cmmid.github.io/topics/covid19/current-patterns-transmission/wuhan-early-dynamics.html\">Kucharski et. al</a></td>\n    <td>Wuhan </td>    \n    <td>3.0 (1.5 — 4.5)</td>\n    <td>5.2</td>\n    <td>2.9</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.nejm.org/doi/full/10.1056/NEJMoa2001316\">Li, Leung and Leung</a></td>\n    <td>Wuhan </td>    \n    <td>2.2 (1.4 — 3.9)</td>\n    <td>5.2 (4.1 — 7.0)</td>\n    <td>2.3 (0.0 — 14.9)</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(20)30260-9/fulltext\">Wu et. al</a></td>\n    <td>Greater Wuhan </td>    \n    <td>2.68 (2.47 — 2.86)</td>\n    <td>6.1</td>\n    <td>2.3</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.who.int/news-room/detail/23-01-2020-statement-on-the-meeting-of-the-international-health-regulations-(2005)-emergency-committee-regarding-the-outbreak-of-novel-coronavirus-(2019-ncov)\">WHO Initial Estimate</a></td>\n    <td>Hubei </td>    \n    <td>1.95 (1.4 — 2.5)</td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.who.int/docs/default-source/coronaviruse/who-china-joint-mission-on-covid-19-final-report.pdf\">WHO-China Joint Mission </a></td>\n    <td>Hubei </td>    \n    <td>2.25 (2.0 — 2.5)</td>\n    <td>5.5 (5.0 - 6.0)</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.biorxiv.org/content/10.1101/2020.01.25.919787v2\">Liu et. al </a></td>\n    <td>Guangdong</td>\n    <td>4.5 (4.4 — 4.6)</td>\n    <td>4.8 (2.2 — 7.4) </td>\n    <td>2.9 (0 — 5.9)</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://academic.oup.com/jtm/advance-article/doi/10.1093/jtm/taaa030/5766334\">Rocklöv, Sjödin and Wilder-Smith</a></td>\n    <td>Princess Diamond</td>\n    <td>14.8</td>\n    <td>5.0</td>\n    <td>10.0</td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.eurosurveillance.org/content/10.2807/1560-7917.ES.2020.25.5.2000062\">Backer, Klinkenberg, Wallinga</a></td>\n    <td>Wuhan</td>\n    <td></td>\n    <td>6.5 (5.6 — 7.9)</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.medrxiv.org/content/10.1101/2020.01.23.20018549v2.article-info\">Read et. al</a></td>\n    <td>Wuhan</td>\n    <td>3.11 (2.39 — 4.13)</td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><a href = \"https://www.medrxiv.org/content/10.1101/2020.03.03.20028423v1\">Bi et. al</a></td>\n    <td>Shenzhen</td>\n    <td></td>\n    <td>4.8 (4.2 — 5.4)</td>\n    <td>1.5 (0 — 3.4)</td>\n    <td></td>\n  </tr>\n\n  <tr>\n    <td><a href = \"https://www.mdpi.com/2077-0383/9/2/462\">Tang et. al</a></td>\n    <td>China</td>\n    <td>6.47 (5.71 — 7.23)</td>\n    <td></td>\n    <td></td>\n  </tr>\n\n</table>\n</div>\n\n\n<p class=\"center\">\nVer  [<a href=\"https://academic.oup.com/jtm/advance-article/doi/10.1093/jtm/taaa021/5735319\">Liu et.\nal</a>] para un relevamiento detallado de las estimaciones actuales del ritmo reporductivo. \nLos parámetros para las características clínicas de las enfermedades se toman de un <a href=\"https://www.who.int/docs/default-source/coronaviruse/who-china-joint-mission-on-covid-19-final-report.pdf\">Informe de la OMS</a>. \n</p>\n\n\n<p class = \"center\">\n<b>Detalles del modelo</b><br>\nLa dinámica clínica en este modelo es una implementacion basada en SEIR que simula la progresión de la enfermedad \nen una &quot;resolución más alta&quot;, es decir se subdivide a {@html math_inline(\"I,R\")} en  <i>leves</i> \n(pacientes que se recuperan sin internación), <i>moderado</i> (pacientes que requieren ser\nhospitalizados pero sobreviven) y <i>fatales</i> (pacientes que son internados y no sobreviven).\nCada una de estas variables sigue su propia trayectoria hasta el resultado final, y la suma de estos compartimentos\nse suman a los valores predichos por SEIR. Tenga en cuenta que suponemos, por simplicidad, que todas las muertes \nprovienen de hospitales, y que todos los casos fatales son ingresados en hospitales inmediatamente después del período infeccioso.\n</p>\n\n<!-- Input data -->\n<div style=\"margin-bottom: 30px\">\n\n  <div class=\"center\" style=\"padding: 10px; margin-top: 3px; width: 925px\">\n    <div class=\"legendtext\">Parámetros para exportar:</div>\n    <form>\n      <textarea type=\"textarea\" rows=\"1\" cols=\"5000\" style=\"white-space: nowrap;  overflow: auto; width:100%; text-align: left\" id=\"fname\" name=\"fname\">{state}</textarea>\n    </form>\n  </div>\n</div>\n",
    "<script>\n  import { scaleLinear, scaleLog } from 'd3-scale';\n  import { drag } from 'd3-drag';\n  import { selectAll } from 'd3-selection'\n  import { onMount } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n  import pnts from './data.js';\n\n\n  const dispatch = createEventDispatcher();\n\n  function range(n){\n    return Array(n).fill().map((_, i) => i);\n  }\n\n  $: showTip = function (i) {\n    active_hover = i\n  }\n\n  function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n\n  var sum = function(arr, bools){\n    var x = 0\n    for (var i = 0; i < arr.length; i++) {\n      x = x + arr[i]*(bools[i] ? 1 : 0)\n    }\n    return x\n  }\n\n  var cuspide = function(arr, bools){\n    var x = 0;\n    for (var i = 0; i < arr.length; i++) {\n      if((arr[i]*(bools[i]))>x) {\n          x = arr[i]*(bools[i]);\n      }\n    }\n    return x\n  }\n\n\n  export let y;\n  export let toto;\n  export let tmax;\n  export let xmax; \n  export let deaths;\n  export let total;\n  export let vline;\n  export let timestep;\n  export let total_infected;\n  export let N;\n  export let ymax;\n  export let InterventionTime;\n  export let colors; \n  export let log = false;\n  export let confirmados=pnts.c;\n  export let muertos=pnts.m;\n  export let retardo;\n\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\n\n  let width  = 750;\n  let height = 520;\n\n\n  $: xScale = scaleLinear()\n    .domain([0, y.length])\n    .range([padding.left, width - padding.right]);\n\n  $: xScaleTime = scaleLinear()\n    .domain([0, tmax])\n    .range([padding.left, width - padding.right]);\n\n  $: indexToTime = scaleLinear()\n    .domain([0, y.length])\n    .range([0, tmax])\n\n  $: timeToIndex = scaleLinear()\n    .domain([0, tmax])\n    .range([0, y.length])\n\n  $: yScale = (log ? scaleLog(): scaleLinear())\n    .domain([log ? 1: 0,  ymax/1])\n    .range([height - padding.bottom, padding.top]);\n\n  $: yScaleL = scaleLog()\n    .domain([1,  ymax/1])\n    .range([0, height - padding.bottom - padding.top]);\n\n\n  $: innerWidth = width - (padding.left + padding.right);\n  $: barWidth = innerWidth / y.length - 1.5;\n  $: active_hover = -1\n  $: lock = false\n  var active_lock = 0\n\n  $: active = (function () {\n    if (lock){\n      var i = Math.round(timeToIndex(active_lock))\n      if (i > 99) {\n        lock = false\n        i = 0\n      } else {\n        return i\n      }\n    } else {\n      return active_hover\n    }\n  })()\n  export let active;\n  export let checked;\n\n  // var data = [[2   , 2  ], [5   , 2  ], [18  , 4  ], [28  , 6  ], [43  , 8  ], [61  , 12 ], [95  , 16 ], [139 , 19 ], [245 , 26 ], [388 , 34 ], [593 , 43 ], [978 , 54 ], [1501, 66 ], [2336, 77 ], [2922, 92 ], [3513, 107], [4747, 124]]\n  var data = []\n</script>\n\n<style>\n  h2 {\n    text-align: center;\n    font-size: 30px;\n    font-weight: 300;\n    font-family: nyt-franklin,arial,helvetica,sans-serif;\n    font-style: normal; \n  }\n\n  .chart {\n    width: 100%;\n    max-width: 800px;\n    margin: 0 auto;\n    padding-top:30px;\n    padding-bottom:10px;\n  }\n\n  svg {\n    position: relative;\n    width: 100%;\n    height: 450px;\n  }\n\n  .tick {\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  .tick line {\n    stroke: #e2e2e2;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #aaa;\n    text-anchor: start;\n  }\n\n  .tick.tick-0 line {\n    stroke-dasharray: 0;\n  }\n\n  .intervention line {\n    stroke: #555;\n    stroke-dasharray: 0;\n    stroke-width:12.5;\n  }\n\n\n  .x-axis .tick text {\n    text-anchor: middle;\n  }\n\n  .bar {\n    stroke: none;\n    opacity: 0.65\n  }\n\n  .total {\n    color: #888;\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n\n  a.tip span:before{\n      content:'';\n      display:block;\n      width:0;\n      height:0;\n      position:absolute;\n\n      border-top: 8px solid transparent;\n      border-bottom: 8px solid transparent;\n      border-right:8px solid black;\n      left:-8px;\n\n      top:7px;\n  }\n\n</style>\n\n<div style=\"width:{width+15}px; height: {height}px; position: relative; top:20px\">\n  <svg style=\"position:absolute; height: {height}px\">\n\n    <!-- y axis -->\n    <g class=\"axis y-axis\" transform=\"translate(0,{padding.top})\">\n      {#each yScale.ticks(5) as tick}\n        <g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - padding.bottom})\">\n          <line x2=\"100%\"></line>\n          <text y=\"-4\">{Number.isInteger(Math.log10(tick)) ? formatNumber(tick) : (log ? \"\": formatNumber(tick))}{ (tick == yScale.ticks(5)[0]) ? \" \": \"\"}</text>\n        </g>\n      {/each}\n    </g>\n\n    <!-- x axis -->\n    <g class=\"axis x-axis\">\n      {#each xScaleTime.ticks() as i}\n        <g class=\"tick\" transform=\"translate({xScaleTime(i)},{height})\">\n          <text x=\"0\" y=\"-4\">{i == 0 ? \"Día \":\"\"}{i}</text>\n        </g>\n      {/each}\n    </g>\n\n\n    <g class='bars'>\n\n      {#each range(y.length -1 ) as i}\n        <rect\n          on:mouseover={() => showTip(i)}\n          on:mouseout={() => showTip(-1)}\n          on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\n          class=\"bar\"\n          x=\"{xScale(i) + 2}\"\n          y=\"{0}\"\n          width=\"{barWidth+3}\"\n          height=\"{height}\"\n          style=\"fill:white; opacity: 0.3\">     \n        </rect>\n\n        {#each range(5) as j}\n          {#if !log}\n              <line\n                x1=\"{xScale(i*checked[j]) }\"\n                y1=\"{yScale( y[i][j]*checked[j] )}\"\n                x2=\"{xScale((i+1)*checked[j]) }\"\n                y2=\"{yScale( y[i+1][j]*checked[j] )}\"\n                style=\"stroke:{colors[j]};stroke-width:3\">     \n              </line>\n          {:else}\n             {#if y[i][j]>0}\n                 <line\n                   x1=\"{xScale(i*checked[j]) }\"\n                   y1=\"{(function () { \n                           var z = yScale( y[i][j]*checked[j] ); \n                           return Math.min(isNaN(z) ? 0: z, yScale(0.1))\n                         })()  \n                       }\"\n                   x2=\"{xScale((i+1)*checked[j]) }\"\n                   y2=\"{(function () { \n                           var z = yScale( y[i+1][j]*checked[j] ); \n                           return Math.min(isNaN(z) ? 0: z, yScale(0.1))\n                         })()  \n                       }\"\n                   style=\"stroke:{colors[j]};stroke-width:3\">     \n                 </line>\n             {/if}\n          {/if}\n        {/each}\n          {#if !log}\n              <line\n                x1=\"{xScale(i*checked[7]) }\"\n                y1=\"{yScale( toto[i]*checked[7] )}\"\n                x2=\"{xScale((i+1)*checked[7]) }\"\n                y2=\"{yScale( toto[i+1]*checked[7] )}\"\n                style=\"stroke:{colors[7]};stroke-width:3\">     \n              </line>\n          {:else}\n             {#if toto[i]>0}\n                 <line\n                   x1=\"{xScale(i*checked[7]) }\"\n                   y1=\"{(function () { \n                           var z = yScale( toto[i]*checked[7] ); \n                           return Math.min(isNaN(z) ? 0: z, yScale(0.1))\n                         })()  \n                       }\"\n                   x2=\"{xScale((i+1)*checked[7]) }\"\n                   y2=\"{(function () { \n                           var z = yScale( toto[i+1]*checked[7] ); \n                           return Math.min(isNaN(z) ? 0: z, yScale(0.1))\n                         })()  \n                       }\"\n                   style=\"stroke:{colors[7]};stroke-width:3\">     \n                 </line>\n             {/if}\n          {/if}\n\n      {/each}\n    </g>\n\n    <g class=\"points\">\n      {#each confirmados as point}\n          {#if !log}\n    \t        <circle cx=\"{xScaleTime(point.x)}\" cy=\"{yScale(point.y)}\" r='4' fill=\"{colors[5]}\" style=\"opacity: 0.9\" />\n          {:else}\n            {#if point.y>0}\n    \t          <circle cx=\"{xScaleTime(point.x)}\" cy=\"{yScale(point.y)}\" r='4' fill=\"{colors[5]}\" style=\"opacity: 0.9\" />\n            {/if}\n          {/if}\n      {/each}\n    </g>\n\n   <g class=\"points\">\n      {#each muertos as point}\n          {#if !log}\n    \t        <circle cx=\"{xScaleTime(point.x+retardo)}\" cy=\"{yScale(point.y)}\" r='4' fill=\"{colors[6]}\" style=\"opacity: 0.9\" />\n          {:else}\n            {#if point.y>0}\n    \t          <circle cx=\"{xScaleTime(point.x+retardo)}\" cy=\"{yScale(point.y)}\" r='4' fill=\"{colors[6]}\" style=\"opacity: 0.9\" />\n            {/if}\n          {/if}\n\n      {/each}\n    </g>\n\n\n<!-- height=\"{Math.max(height - padding.bottom - yScale(y[i][j]*checked[j] ),0)}\" -->\n\n    <g class='bars'>\n      {#each range(data.length) as i}\n        <rect\n          class=\"bar\"\n          x=\"{xScale( i+28 ) + 2}\"\n          y=\"{yScale( data[i][1] )}\"\n          width=\"{barWidth}\"\n          height=\"{height - padding.bottom - yScale( data[i][1] )}\"\n          style=\"fill:black; \n                 opacity: 0.3;\n                 box-shadow: 4px 10px 5px 2px rgba(0,0,0,0.75);\">     \n        </rect>\n      {/each}\n    </g>\n\n  </svg> \n\n  <div style=\"position: absolute;width:{width+15}px; height: {height}px; position: absolute; top:0px; left:0px; pointer-events: none\">\n   \n    {#if active >= 0}\n      <div style=\"position:absolute; \n                  pointer-events: none;\n                  width:100px;\n                  left:{xScale(active)}px;\n                  top:{Math.max(yScale(cuspide(y[active], checked)),0) }px\" class=\"tip\"> \n          <!-- {#if lock} <div style=\"position:absolute; top:-35px; left:-3.5px; font-family: Source Code Pro\">🔒</div> {/if} -->\n          <svg style=\"position:absolute; top:-12px; left:0px\" height=\"10\" width=\"10\">\n          <path \n            d=\"M 0 0 L 10 0 L 5 10 z\"\n            fill=\"{lock ? '#555':'#AAA'}\" \n            stroke-width=\"3\" />\n          </svg>\n      </div>\n    {/if}\n\n  </div>\n\n</div>\n",
    "<script>\n  import { scaleLinear, scaleLog } from 'd3-scale';\n  import { drag } from 'd3-drag';\n  import { selectAll } from 'd3-selection'\n  import { onMount } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n  import pnts from './data.js';\n\n\n  const dispatch = createEventDispatcher();\n\n  function range(n){\n    return Array(n).fill().map((_, i) => i);\n  }\n\n  $: showTip = function (i) {\n    active_hover = i\n  }\n\n  function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n\n  var sum = function(arr, bools){\n    var x = 0\n    for (var i = 0; i < arr.length; i++) {\n      x = x + arr[i]*(bools[i] ? 1 : 0)\n    }\n    return x\n  }\n\n  var cuspide = function(arr, bools){\n    var x = 0;\n    for (var i = 0; i < arr.length; i++) {\n      if((arr[i]*(bools[i]))>x) {\n          x = arr[i]*(bools[i]);\n      }\n    }\n    return x\n  }\n\n\n  export let y;\n  export let tmax;\n  export let xmax; \n  export let deaths;\n  export let total;\n  export let vline;\n  export let timestep;\n  export let total_infected;\n  export let N;\n  export let ymax;\n  export let colors; \n  export let log = false;\n  export let confirmados=pnts.c;\n  export let muertos=pnts.m;\n  export let retardo;\n\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\n\n  let width  = 750;\n  let height = 200;\n\n\n  $: xScale = scaleLinear()\n    .domain([0, y.length])\n    .range([padding.left, width - padding.right]);\n\n  $: xScaleTime = scaleLinear()\n    .domain([0, tmax])\n    .range([padding.left, width - padding.right]);\n\n  $: indexToTime = scaleLinear()\n    .domain([0, y.length])\n    .range([0, tmax])\n\n  $: timeToIndex = scaleLinear()\n    .domain([0, tmax])\n    .range([0, y.length])\n\n  $: yScale = (log ? scaleLog(): scaleLinear())\n    .domain([log ? 1: 0,  ymax/1])\n    .range([height - padding.bottom, padding.top]);\n\n  $: yScaleL = scaleLog()\n    .domain([1,  ymax/1])\n    .range([0, height - padding.bottom - padding.top]);\n\n\n  $: innerWidth = width - (padding.left + padding.right);\n  $: barWidth = innerWidth / y.length - 1.5;\n  $: active_hover = -1\n  $: lock = false\n  var active_lock = 0\n\n  $: active = (function () {\n    if (lock){\n      var i = Math.round(timeToIndex(active_lock))\n      if (i > 99) {\n        lock = false\n        i = 0\n      } else {\n        return i\n      }\n    } else {\n      return active_hover\n    }\n  })()\n  export let active;\n  export let checked;\n\n  // var data = [[2   , 2  ], [5   , 2  ], [18  , 4  ], [28  , 6  ], [43  , 8  ], [61  , 12 ], [95  , 16 ], [139 , 19 ], [245 , 26 ], [388 , 34 ], [593 , 43 ], [978 , 54 ], [1501, 66 ], [2336, 77 ], [2922, 92 ], [3513, 107], [4747, 124]]\n  var data = []\n</script>\n\n<style>\n  h2 {\n    text-align: center;\n    font-size: 30px;\n    font-weight: 300;\n    font-family: nyt-franklin,arial,helvetica,sans-serif;\n    font-style: normal; \n  }\n\n  .chart {\n    width: 100%;\n    max-width: 800px;\n    margin: 0 auto;\n    padding-top:30px;\n    padding-bottom:10px;\n  }\n\n  svg {\n    position: relative;\n    width: 100%;\n    height: 450px;\n  }\n\n  .tick {\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  .tick line {\n    stroke: #e2e2e2;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #aaa;\n    text-anchor: start;\n  }\n\n  .tick.tick-0 line {\n    stroke-dasharray: 0;\n  }\n\n  .intervention line {\n    stroke: #555;\n    stroke-dasharray: 0;\n    stroke-width:12.5;\n  }\n\n\n  .x-axis .tick text {\n    text-anchor: middle;\n  }\n\n  .bar {\n    stroke: none;\n    opacity: 0.65\n  }\n\n  .total {\n    color: #888;\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n\n  a.tip span:before{\n      content:'';\n      display:block;\n      width:0;\n      height:0;\n      position:absolute;\n\n      border-top: 8px solid transparent;\n      border-bottom: 8px solid transparent;\n      border-right:8px solid black;\n      left:-8px;\n\n      top:7px;\n  }\n\n</style>\n\n<div style=\"width:{width+15}px; height: {height}px; position: relative; top:20px\">\n  <svg style=\"position:absolute; height: {height}px\">\n\n    <!-- y axis -->\n    <g class=\"axis y-axis\" transform=\"translate(0,{padding.top})\">\n      {#each yScale.ticks(5) as tick}\n        <g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - padding.bottom})\">\n          <line x2=\"100%\"></line>\n          <text y=\"-4\">{Number.isInteger(Math.log10(tick)) ? formatNumber(tick) : (log ? \"\": formatNumber(tick))}{ (tick == yScale.ticks(5)[0]) ? \" \": \"\"}</text>\n        </g>\n      {/each}\n    </g>\n\n    <!-- x axis -->\n    <g class=\"axis x-axis\">\n      {#each xScaleTime.ticks() as i}\n        <g class=\"tick\" transform=\"translate({xScaleTime(i)},{height})\">\n          <text x=\"0\" y=\"-4\">{i == 0 ? \"Día \":\"\"}{i}</text>\n        </g>\n      {/each}\n    </g>\n\n\n    <g class='bars'>\n\n      {#each range(y.length -1 ) as i}\n        <rect\n          on:mouseover={() => showTip(i)}\n          on:mouseout={() => showTip(-1)}\n          on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\n          class=\"bar\"\n          x=\"{xScale(i) + 2}\"\n          y=\"{0}\"\n          width=\"{barWidth+3}\"\n          height=\"{height}\"\n          style=\"fill:white; opacity: 0.3\">     \n        </rect>\n\n          {#if !log}\n              <line\n                x1=\"{xScale(i) }\"\n                y1=\"{yScale( y[i])}\"\n                x2=\"{xScale((i+1)) }\"\n                y2=\"{yScale( y[i+1])}\"\n                style=\"stroke:{colors[3]};stroke-width:3\">     \n              </line>\n          {:else}\n             {#if y[i]>0}\n                 <line\n                   x1=\"{xScale(i) }\"\n                   y1=\"{(function () { \n                           var z = yScale( y[i]); \n                           return Math.min(isNaN(z) ? 0: z, yScale(0.1))\n                         })()  \n                       }\"\n                   x2=\"{xScale((i+1)) }\"\n                   y2=\"{(function () { \n                           var z = yScale( y[i+1]); \n                           return Math.min(isNaN(z) ? 0: z, yScale(0.1))\n                         })()  \n                       }\"\n                   style=\"stroke:{colors[3]};stroke-width:3\">     \n                 </line>\n             {/if}\n          {/if}\n\n      {/each}\n    </g>\n\n\n    <g class='bars'>\n      {#each range(data.length) as i}\n        <rect\n          class=\"bar\"\n          x=\"{xScale( i+28 ) + 2}\"\n          y=\"{yScale( data[i][1] )}\"\n          width=\"{barWidth}\"\n          height=\"{height - padding.bottom - yScale( data[i][1] )}\"\n          style=\"fill:black; \n                 opacity: 0.3;\n                 box-shadow: 4px 10px 5px 2px rgba(0,0,0,0.75);\">     \n        </rect>\n      {/each}\n    </g>\n\n  </svg> \n\n</div>\n"
  ],
  "names": [],
  "mappings": "AA0kBE,QAAQ,IAAI,sEAAsE,CAAC,CAAC,AAGpF,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,CACpB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,cAAc,CAAE,IAAI;EACtB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,cAAc,CAAE,IAAI,CACpB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,MAAM,IAAI,CACV,SAAS,CAAE,MAAM,CACjB,UAAU,CAAE,OAAO,CACnB,WAAW,CAAE,IAAI;EACnB,CAAC,AAYD,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,IAAI,CAAE,KAAK,CACX,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACxB,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,AAEzB,CAAC,AAWD,gCAAiB,CAAC,AAChB,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC/B,CAAC,AAQD,0BAAW,CAAC,AACV,MAAM,IAAI,CACV,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,AACtD,CAAC,AAED,yBAAU,CAAC,AACT,MAAM,IAAI,CACV,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,0BAAW,CAAC,AACV,MAAM,IAAI,CACV,WAAW,CAAE,GAAG,CAChB,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,WAAW,CAAE,iBAAiB,CAAC,CAAC,SAAS,CACzC,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,KAAK,AAEnB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,YAAY,GAAG,CACf,eAAe,IAAI,AACrB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,KAAK,CACb,IAAI,CAAE,IAAI,CACV,GAAG,CAAE,GAAG,CACR,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,YAAY,eAAC,CAAC,AACZ,MAAM,IAAI,CACV,UAAU,IAAI,CACd,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,AACtD,CAAC,AAGD,0BAAW,CAAC,AACV,MAAM,IAAI,CACV,UAAU,IAAI,CACd,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,6BAAc,CAAC,AACb,MAAM,IAAI,CACV,UAAU,IAAI,CACd,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,IAAI,CAAE,IAAI,CACV,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI;EACjB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CACpD,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,eAAe,CAAE,QAAQ,CACzB,OAAO,CAAE,GAAG,AAEd,CAAC,AAED,EAAE,eAAC,CAAC,AACF,eAAe,CAAE,QAAQ,CACzB,cAAc,CAAE,IAAI,AACtB,CAAC,AAcD,EAAE,eAAC,CAAC,AAAC,WAAW,CAAE,GAAG,CAAE,UAAU,CAAE,IAAI,CAAE,cAAc,CAAE,GAAG,CAAE,cAAc,CAAE,QAAQ,CAAM,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAAE,CAAC,AAE5H,gBAAC,KAAK,AAAC,CAAC,AAAC,KAAK,CAAE,IAAI,AAAE,CAAC,AACvB,gBAAC,QAAQ,AAAC,CAAC,AAAC,KAAK,CAAE,IAAI,AAAE,CAAC;AC3oB1B,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,YAAY,IAAI,CAChB,eAAe,IAAI,AACrB,CAAC,AAED,GAAG,eAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC,AAED,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,CAAC,AACrB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,KAAK,AACpB,CAAC,AAED,KAAK,sBAAO,CAAC,IAAI,eAAC,CAAC,AACjB,gBAAgB,CAAE,CAAC,AACrB,CAAC,AAED,4BAAa,CAAC,IAAI,eAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,CAAC,CACnB,aAAa,IAAI,AACnB,CAAC,AAGD,sBAAO,CAAC,KAAK,CAAC,IAAI,eAAC,CAAC,AAClB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI;EACf,CAAC,AAED,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC;ACzDD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,YAAY,IAAI,CAChB,eAAe,IAAI,AACrB,CAAC,AAED,GAAG,eAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC,AAED,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,CAAC,AACrB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,KAAK,AACpB,CAAC,AAED,KAAK,sBAAO,CAAC,IAAI,eAAC,CAAC,AACjB,gBAAgB,CAAE,CAAC,AACrB,CAAC,AAED,4BAAa,CAAC,IAAI,eAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,CAAC,CACnB,aAAa,IAAI,AACnB,CAAC,AAGD,sBAAO,CAAC,KAAK,CAAC,IAAI,eAAC,CAAC,AAClB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI;EACf,CAAC,AAED,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC"
}